name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  PRODUCT: ipfs-pinner

permissions:
  contents: read

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ linux, freebsd, openbsd, dragonfly, windows, darwin ]
        arch: [ amd64, 386 ]
        include:
          - os: linux
            arch: arm
            arm: 5
          - os: linux
            arch: arm
            arm: 6
          - os: linux
            arch: arm
            arm: 7
          - os: linux
            arch: arm64
          - os: linux
            arch: mips
            mips: softfloat
          - os: linux
            arch: mips
            mips: hardfloat
          - os: linux
            arch: mipsle
            mipsle: softfloat
          - os: linux
            arch: mipsle
            mipsle: hardfloat
          - os: linux
            arch: mips64
          - os: linux
            arch: mips64le
          - os: linux
            arch: ppc64
          - os: linux
            arch: ppc64le
          - os: linux
            arch: s390x
          - os: windows
            arch: arm
          - os: windows
            arch: arm64
          - os: android
            arch: arm64
          - os: darwin
            arch: arm64
          - os: freebsd
            arch: arm64
        exclude:
          - os: darwin
            arch: 386
          - os: dragonfly
            arch: 386
      fail-fast: false
    uses: wabarc/.github/.github/workflows/reusable-builder-go.yml@main
    with:
      product: ipfs-pinner
      release: true
      go-version: '^1.19'
      go-os: ${{ matrix.os }}
      go-arch: ${{ matrix.arch }}
      go-arm: ${{ matrix.arm }}
      go-mips: ${{ matrix.mips }}
      go-mips64: ${{ matrix.mips64 }}
      go-mipsle: ${{ matrix.mipsle }}
      artifact-path: build/package/ipfs-pinner*

  release:
    name: Create and upload release
    needs: [ build, debpkg, rpmpkg, aurpkg, snapcraft, flatpak ]
    permissions:
      contents: write
    uses: wabarc/.github/.github/workflows/reusable-releaser-go.yml@main
    with:
      product: ipfs-pinner

  notification:
    if: github.repository == 'wabarc/ipfs-pinner'
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [release]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: release-note
        path: .

    - name: Send release note to Telegram channel
      continue-on-error: true
      run: |
        TEXT="$(cat release-note.md)"
        echo -e "${TEXT}"
        curl --silent --output /dev/null --show-error --fail -X POST \
             -H 'Content-Type: application/json' \
             -d '{"chat_id": "${{ secrets.TELEGRAM_TO }}", "text": "'"${TEXT}"'", "parse_mode": "markdown"}' \
             "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage"

